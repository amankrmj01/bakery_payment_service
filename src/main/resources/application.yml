# Server Configuration
server:
  port: 8085

# Spring Application Configuration
spring:
  application:
    name: payment-service

  # Docker Compose Configuration
  docker:
    compose:
      file: docker-compose-payments-db.yml
      enabled: false

  # PostgreSQL Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5435/bakery_payments
    username: payment_user
    password: payment_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  # Jackson Configuration
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# Feign Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic

# Management & Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true

# Payment Service Specific Configuration
payment:
  gateways:
    stripe:
      enabled: false
      api-key: sk_test_xxxx  # Add real keys in production
      webhook-secret: whsec_xxxx
    paypal:
      enabled: false
      client-id: xxxx
      client-secret: xxxx
      environment: sandbox  # or live
    square:
      enabled: false
      access-token: xxxx
      environment: sandbox

  # Transaction limits
  limits:
    min-amount: 0.50
    max-amount: 10000.00
    daily-limit: 50000.00

  # Retry configuration
  retry:
    max-attempts: 3
    initial-delay: 1000
    max-delay: 10000

  # Webhook configuration
  webhook:
    timeout-seconds: 30
    max-retries: 5

# External Service URLs
external-services:
  order-service:
    base-url: http://localhost:8084

# Logging Configuration
logging:
  level:
    com.shah_s.bakery_payment_service: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    feign: DEBUG
    root: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: logs/payment-service.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
